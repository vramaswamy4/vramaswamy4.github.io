{"version":3,"file":"shuffle.js","sources":["../../../node_modules/tiny-emitter/index.js","../../../node_modules/array-parallel/index.js","../src/get-number.js","../src/point.js","../src/rect.js","../src/classes.js","../src/shuffle-item.js","../src/computed-size.js","../src/get-number-style.js","../src/sorter.js","../src/on-transition-end.js","../src/array-max.js","../src/array-min.js","../src/layout.js","../src/hyphenate.js","../src/shuffle.js"],"sourcesContent":["function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","module.exports = function parallel(fns, context, callback) {\n  if (!callback) {\n    if (typeof context === 'function') {\n      callback = context\n      context = null\n    } else {\n      callback = noop\n    }\n  }\n\n  var pending = fns && fns.length\n  if (!pending) return callback(null, []);\n\n  var finished = false\n  var results = new Array(pending)\n\n  fns.forEach(context ? function (fn, i) {\n    fn.call(context, maybeDone(i))\n  } : function (fn, i) {\n    fn(maybeDone(i))\n  })\n\n  function maybeDone(i) {\n    return function (err, result) {\n      if (finished) return;\n\n      if (err) {\n        callback(err, results)\n        finished = true\n        return\n      }\n\n      results[i] = result\n\n      if (!--pending) callback(null, results);\n    }\n  }\n}\n\nfunction noop() {}\n","/**\n * Always returns a numeric value, given a value. Logic from jQuery's `isNumeric`.\n * @param {*} value Possibly numeric value.\n * @return {number} `value` or zero if `value` isn't numeric.\n */\nexport default function getNumber(value) {\n  return parseFloat(value) || 0;\n}\n","import getNumber from './get-number';\n\nclass Point {\n  /**\n   * Represents a coordinate pair.\n   * @param {number} [x=0] X.\n   * @param {number} [y=0] Y.\n   */\n  constructor(x, y) {\n    this.x = getNumber(x);\n    this.y = getNumber(y);\n  }\n\n  /**\n   * Whether two points are equal.\n   * @param {Point} a Point A.\n   * @param {Point} b Point B.\n   * @return {boolean}\n   */\n  static equals(a, b) {\n    return a.x === b.x && a.y === b.y;\n  }\n}\n\nexport default Point;\n","export default class Rect {\n  /**\n   * Class for representing rectangular regions.\n   * https://github.com/google/closure-library/blob/master/closure/goog/math/rect.js\n   * @param {number} x Left.\n   * @param {number} y Top.\n   * @param {number} w Width.\n   * @param {number} h Height.\n   * @param {number} id Identifier\n   * @constructor\n   */\n  constructor(x, y, w, h, id) {\n    this.id = id;\n\n    /** @type {number} */\n    this.left = x;\n\n    /** @type {number} */\n    this.top = y;\n\n    /** @type {number} */\n    this.width = w;\n\n    /** @type {number} */\n    this.height = h;\n  }\n\n  /**\n   * Returns whether two rectangles intersect.\n   * @param {Rect} a A Rectangle.\n   * @param {Rect} b A Rectangle.\n   * @return {boolean} Whether a and b intersect.\n   */\n  static intersects(a, b) {\n    return (\n      a.left < b.left + b.width && b.left < a.left + a.width && a.top < b.top + b.height && b.top < a.top + a.height\n    );\n  }\n}\n","export default {\n  BASE: 'shuffle',\n  SHUFFLE_ITEM: 'shuffle-item',\n  VISIBLE: 'shuffle-item--visible',\n  HIDDEN: 'shuffle-item--hidden',\n};\n","import Point from './point';\nimport Classes from './classes';\n\nlet id = 0;\n\nclass ShuffleItem {\n  constructor(element, isRTL) {\n    id += 1;\n    this.id = id;\n    this.element = element;\n\n    /**\n     * Set correct direction of item\n     */\n    this.isRTL = isRTL;\n\n    /**\n     * Used to separate items for layout and shrink.\n     */\n    this.isVisible = true;\n\n    /**\n     * Used to determine if a transition will happen. By the time the _layout\n     * and _shrink methods get the ShuffleItem instances, the `isVisible` value\n     * has already been changed by the separation methods, so this property is\n     * needed to know if the item was visible/hidden before the shrink/layout.\n     */\n    this.isHidden = false;\n  }\n\n  show() {\n    this.isVisible = true;\n    this.element.classList.remove(Classes.HIDDEN);\n    this.element.classList.add(Classes.VISIBLE);\n    this.element.removeAttribute('aria-hidden');\n  }\n\n  hide() {\n    this.isVisible = false;\n    this.element.classList.remove(Classes.VISIBLE);\n    this.element.classList.add(Classes.HIDDEN);\n    this.element.setAttribute('aria-hidden', true);\n  }\n\n  init() {\n    this.addClasses([Classes.SHUFFLE_ITEM, Classes.VISIBLE]);\n    this.applyCss(ShuffleItem.Css.INITIAL);\n    this.applyCss(this.isRTL ? ShuffleItem.Css.DIRECTION.rtl : ShuffleItem.Css.DIRECTION.ltr);\n    this.scale = ShuffleItem.Scale.VISIBLE;\n    this.point = new Point();\n  }\n\n  addClasses(classes) {\n    classes.forEach((className) => {\n      this.element.classList.add(className);\n    });\n  }\n\n  removeClasses(classes) {\n    classes.forEach((className) => {\n      this.element.classList.remove(className);\n    });\n  }\n\n  applyCss(obj) {\n    Object.keys(obj).forEach((key) => {\n      this.element.style[key] = obj[key];\n    });\n  }\n\n  dispose() {\n    this.removeClasses([Classes.HIDDEN, Classes.VISIBLE, Classes.SHUFFLE_ITEM]);\n\n    this.element.removeAttribute('style');\n    this.element = null;\n  }\n}\n\nShuffleItem.Css = {\n  INITIAL: {\n    position: 'absolute',\n    top: 0,\n    visibility: 'visible',\n    willChange: 'transform',\n  },\n  DIRECTION: {\n    ltr: {\n      left: 0,\n    },\n    rtl: {\n      right: 0,\n    },\n  },\n  VISIBLE: {\n    before: {\n      opacity: 1,\n      visibility: 'visible',\n    },\n    after: {\n      transitionDelay: '',\n    },\n  },\n  HIDDEN: {\n    before: {\n      opacity: 0,\n    },\n    after: {\n      visibility: 'hidden',\n      transitionDelay: '',\n    },\n  },\n};\n\nShuffleItem.Scale = {\n  VISIBLE: 1,\n  HIDDEN: 0.001,\n};\n\nexport default ShuffleItem;\n","import getNumber from './get-number';\n\nlet value = null;\nexport default () => {\n  if (value !== null) {\n    return value;\n  }\n\n  const element = document.body || document.documentElement;\n  const e = document.createElement('div');\n  e.style.cssText = 'width:10px;padding:2px;box-sizing:border-box;';\n  element.appendChild(e);\n\n  const { width } = window.getComputedStyle(e, null);\n  // Fix for issue #314\n  value = Math.round(getNumber(width)) === 10;\n\n  element.removeChild(e);\n\n  return value;\n};\n","import getNumber from './get-number';\nimport testComputedSize from './computed-size';\n\n/**\n * Retrieve the computed style for an element, parsed as a float.\n * @param {Element} element Element to get style for.\n * @param {string} style Style property.\n * @param {CSSStyleDeclaration} [styles] Optionally include clean styles to\n *     use instead of asking for them again.\n * @return {number} The parsed computed value or zero if that fails because IE\n *     will return 'auto' when the element doesn't have margins instead of\n *     the computed style.\n */\nexport default function getNumberStyle(element, style, styles = window.getComputedStyle(element, null)) {\n  let value = getNumber(styles[style]);\n\n  // Support IE<=11 and W3C spec.\n  if (!testComputedSize() && style === 'width') {\n    value +=\n      getNumber(styles.paddingLeft) +\n      getNumber(styles.paddingRight) +\n      getNumber(styles.borderLeftWidth) +\n      getNumber(styles.borderRightWidth);\n  } else if (!testComputedSize() && style === 'height') {\n    value +=\n      getNumber(styles.paddingTop) +\n      getNumber(styles.paddingBottom) +\n      getNumber(styles.borderTopWidth) +\n      getNumber(styles.borderBottomWidth);\n  }\n\n  return value;\n}\n","/**\n * Fisher-Yates shuffle.\n * http://stackoverflow.com/a/962890/373422\n * https://bost.ocks.org/mike/shuffle/\n * @param {Array} array Array to shuffle.\n * @return {Array} Randomly sorted array.\n */\nfunction randomize(array) {\n  let n = array.length;\n\n  while (n) {\n    n -= 1;\n    const i = Math.floor(Math.random() * (n + 1));\n    const temp = array[i];\n    array[i] = array[n];\n    array[n] = temp;\n  }\n\n  return array;\n}\n\nconst defaults = {\n  // Use array.reverse() to reverse the results\n  reverse: false,\n\n  // Sorting function\n  by: null,\n\n  // Custom sort function\n  compare: null,\n\n  // If true, this will skip the sorting and return a randomized order in the array\n  randomize: false,\n\n  // Determines which property of each item in the array is passed to the\n  // sorting method.\n  key: 'element',\n};\n\n/**\n * You can return `undefined` from the `by` function to revert to DOM order.\n * @param {Array<T>} arr Array to sort.\n * @param {SortOptions} options Sorting options.\n * @return {Array<T>}\n */\nexport default function sorter(arr, options) {\n  const opts = { ...defaults, ...options };\n  const original = Array.from(arr);\n  let revert = false;\n\n  if (!arr.length) {\n    return [];\n  }\n\n  if (opts.randomize) {\n    return randomize(arr);\n  }\n\n  // Sort the elements by the opts.by function.\n  // If we don't have opts.by, default to DOM order\n  if (typeof opts.by === 'function') {\n    arr.sort((a, b) => {\n      // Exit early if we already know we want to revert\n      if (revert) {\n        return 0;\n      }\n\n      const valA = opts.by(a[opts.key]);\n      const valB = opts.by(b[opts.key]);\n\n      // If both values are undefined, use the DOM order\n      if (valA === undefined && valB === undefined) {\n        revert = true;\n        return 0;\n      }\n\n      if (valA < valB || valA === 'sortFirst' || valB === 'sortLast') {\n        return -1;\n      }\n\n      if (valA > valB || valA === 'sortLast' || valB === 'sortFirst') {\n        return 1;\n      }\n\n      return 0;\n    });\n  } else if (typeof opts.compare === 'function') {\n    arr.sort(opts.compare);\n  }\n\n  // Revert to the original array if necessary\n  if (revert) {\n    return original;\n  }\n\n  if (opts.reverse) {\n    arr.reverse();\n  }\n\n  return arr;\n}\n","const transitions = {};\nconst eventName = 'transitionend';\nlet count = 0;\n\nfunction uniqueId() {\n  count += 1;\n  return eventName + count;\n}\n\nexport function cancelTransitionEnd(id) {\n  if (transitions[id]) {\n    transitions[id].element.removeEventListener(eventName, transitions[id].listener);\n    transitions[id] = null;\n    return true;\n  }\n\n  return false;\n}\n\nexport function onTransitionEnd(element, callback) {\n  const id = uniqueId();\n  const listener = (evt) => {\n    if (evt.currentTarget === evt.target) {\n      cancelTransitionEnd(id);\n      callback(evt);\n    }\n  };\n\n  element.addEventListener(eventName, listener);\n\n  transitions[id] = { element, listener };\n\n  return id;\n}\n","export default function arrayMax(array) {\n  return Math.max(...array);\n}\n","export default function arrayMin(array) {\n  return Math.min(...array);\n}\n","import Point from './point';\nimport Rect from './rect';\nimport arrayMax from './array-max';\nimport arrayMin from './array-min';\n\n/**\n * Determine the number of columns an items spans.\n * @param {number} itemWidth Width of the item.\n * @param {number} columnWidth Width of the column (includes gutter).\n * @param {number} columns Total number of columns\n * @param {number} threshold A buffer value for the size of the column to fit.\n * @return {number}\n */\nexport function getColumnSpan(itemWidth, columnWidth, columns, threshold) {\n  let columnSpan = itemWidth / columnWidth;\n\n  // If the difference between the rounded column span number and the\n  // calculated column span number is really small, round the number to\n  // make it fit.\n  if (Math.abs(Math.round(columnSpan) - columnSpan) < threshold) {\n    // e.g. columnSpan = 4.0089945390298745\n    columnSpan = Math.round(columnSpan);\n  }\n\n  // Ensure the column span is not more than the amount of columns in the whole layout.\n  return Math.min(Math.ceil(columnSpan), columns);\n}\n\n/**\n * Retrieves the column set to use for placement.\n * @param {number} columnSpan The number of columns this current item spans.\n * @param {number} columns The total columns in the grid.\n * @return {Array.<number>} An array of numbers representing the column set.\n */\nexport function getAvailablePositions(positions, columnSpan, columns) {\n  // The item spans only one column.\n  if (columnSpan === 1) {\n    return positions;\n  }\n\n  // The item spans more than one column, figure out how many different\n  // places it could fit horizontally.\n  // The group count is the number of places within the positions this block\n  // could fit, ignoring the current positions of items.\n  // Imagine a 2 column brick as the second item in a 4 column grid with\n  // 10px height each. Find the places it would fit:\n  // [20, 10, 10, 0]\n  //  |   |   |\n  //  *   *   *\n  //\n  // Then take the places which fit and get the bigger of the two:\n  // max([20, 10]), max([10, 10]), max([10, 0]) = [20, 10, 10]\n  //\n  // Next, find the first smallest number (the short column).\n  // [20, 10, 10]\n  //      |\n  //      *\n  //\n  // And that's where it should be placed!\n  //\n  // Another example where the second column's item extends past the first:\n  // [10, 20, 10, 0] => [20, 20, 10] => 10\n  const available = [];\n\n  // For how many possible positions for this item there are.\n  for (let i = 0; i <= columns - columnSpan; i++) {\n    // Find the bigger value for each place it could fit.\n    available.push(arrayMax(positions.slice(i, i + columnSpan)));\n  }\n\n  return available;\n}\n\n/**\n * Find index of short column, the first from the left where this item will go.\n *\n * @param {Array.<number>} positions The array to search for the smallest number.\n * @param {number} buffer Optional buffer which is very useful when the height\n *     is a percentage of the width.\n * @return {number} Index of the short column.\n */\nexport function getShortColumn(positions, buffer) {\n  const minPosition = arrayMin(positions);\n  for (let i = 0, len = positions.length; i < len; i++) {\n    if (positions[i] >= minPosition - buffer && positions[i] <= minPosition + buffer) {\n      return i;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Determine the location of the next item, based on its size.\n * @param {Object} itemSize Object with width and height.\n * @param {Array.<number>} positions Positions of the other current items.\n * @param {number} gridSize The column width or row height.\n * @param {number} total The total number of columns or rows.\n * @param {number} threshold Buffer value for the column to fit.\n * @param {number} buffer Vertical buffer for the height of items.\n * @return {Point}\n */\nexport function getItemPosition({ itemSize, positions, gridSize, total, threshold, buffer }) {\n  const span = getColumnSpan(itemSize.width, gridSize, total, threshold);\n  const setY = getAvailablePositions(positions, span, total);\n  const shortColumnIndex = getShortColumn(setY, buffer);\n\n  // Position the item\n  const point = new Point(gridSize * shortColumnIndex, setY[shortColumnIndex]);\n\n  // Update the columns array with the new values for each column.\n  // e.g. before the update the columns could be [250, 0, 0, 0] for an item\n  // which spans 2 columns. After it would be [250, itemHeight, itemHeight, 0].\n  const setHeight = setY[shortColumnIndex] + itemSize.height;\n  for (let i = 0; i < span; i++) {\n    positions[shortColumnIndex + i] = setHeight;\n  }\n\n  return point;\n}\n\n/**\n * This method attempts to center items. This method could potentially be slow\n * with a large number of items because it must place items, then check every\n * previous item to ensure there is no overlap.\n * @param {Array.<Rect>} itemRects Item data objects.\n * @param {number} containerWidth Width of the containing element.\n * @return {Array.<Point>}\n */\nexport function getCenteredPositions(itemRects, containerWidth) {\n  const rowMap = {};\n\n  // Populate rows by their offset because items could jump between rows like:\n  // a   c\n  //  bbb\n  itemRects.forEach((itemRect) => {\n    if (rowMap[itemRect.top]) {\n      // Push the point to the last row array.\n      rowMap[itemRect.top].push(itemRect);\n    } else {\n      // Start of a new row.\n      rowMap[itemRect.top] = [itemRect];\n    }\n  });\n\n  // For each row, find the end of the last item, then calculate\n  // the remaining space by dividing it by 2. Then add that\n  // offset to the x position of each point.\n  let rects = [];\n  const rows = [];\n  const centeredRows = [];\n  Object.keys(rowMap).forEach((key) => {\n    const itemRects = rowMap[key];\n    rows.push(itemRects);\n    const lastItem = itemRects[itemRects.length - 1];\n    const end = lastItem.left + lastItem.width;\n    const offset = Math.round((containerWidth - end) / 2);\n\n    let finalRects = itemRects;\n    let canMove = false;\n    if (offset > 0) {\n      const newRects = [];\n      canMove = itemRects.every((r) => {\n        const newRect = new Rect(r.left + offset, r.top, r.width, r.height, r.id);\n\n        // Check all current rects to make sure none overlap.\n        const noOverlap = !rects.some((r) => Rect.intersects(newRect, r));\n\n        newRects.push(newRect);\n        return noOverlap;\n      });\n\n      // If none of the rectangles overlapped, the whole group can be centered.\n      if (canMove) {\n        finalRects = newRects;\n      }\n    }\n\n    // If the items are not going to be offset, ensure that the original\n    // placement for this row will not overlap previous rows (row-spanning\n    // elements could be in the way).\n    if (!canMove) {\n      let intersectingRect;\n      const hasOverlap = itemRects.some((itemRect) =>\n        rects.some((r) => {\n          const intersects = Rect.intersects(itemRect, r);\n          if (intersects) {\n            intersectingRect = r;\n          }\n          return intersects;\n        }),\n      );\n\n      // If there is any overlap, replace the overlapping row with the original.\n      if (hasOverlap) {\n        const rowIndex = centeredRows.findIndex((items) => items.includes(intersectingRect));\n        centeredRows.splice(rowIndex, 1, rows[rowIndex]);\n      }\n    }\n\n    rects = rects.concat(finalRects);\n    centeredRows.push(finalRects);\n  });\n\n  // Reduce array of arrays to a single array of points.\n  // https://stackoverflow.com/a/10865042/373422\n  // Then reset sort back to how the items were passed to this method.\n  // Remove the wrapper object with index, map to a Point.\n  return centeredRows\n    .flat()\n    .sort((a, b) => a.id - b.id)\n    .map((itemRect) => new Point(itemRect.left, itemRect.top));\n}\n","/**\n * Hyphenates a javascript style string to a css one. For example:\n * MozBoxSizing -> -moz-box-sizing.\n * @param {string} str The string to hyphenate.\n * @return {string} The hyphenated string.\n */\nexport default function hyphenate(str) {\n  return str.replace(/([A-Z])/g, (str, m1) => `-${m1.toLowerCase()}`);\n}\n","import TinyEmitter from 'tiny-emitter';\nimport parallel from 'array-parallel';\n\nimport Point from './point';\nimport Rect from './rect';\nimport ShuffleItem from './shuffle-item';\nimport Classes from './classes';\nimport getNumberStyle from './get-number-style';\nimport sorter from './sorter';\nimport { onTransitionEnd, cancelTransitionEnd } from './on-transition-end';\nimport { getItemPosition, getColumnSpan, getAvailablePositions, getShortColumn, getCenteredPositions } from './layout';\nimport arrayMax from './array-max';\nimport hyphenate from './hyphenate';\n\nfunction arrayUnique(x) {\n  return Array.from(new Set(x));\n}\n\n// Used for unique instance variables\nlet id = 0;\n\nclass Shuffle extends TinyEmitter {\n  /**\n   * Categorize, sort, and filter a responsive grid of items.\n   *\n   * @param {Element} element An element which is the parent container for the grid items.\n   * @param {Object} [options=Shuffle.options] Options object.\n   * @constructor\n   */\n  constructor(element, options = {}) {\n    super();\n    this.options = { ...Shuffle.options, ...options };\n\n    this.lastSort = {};\n    this.group = Shuffle.ALL_ITEMS;\n    this.lastFilter = Shuffle.ALL_ITEMS;\n    this.isEnabled = true;\n    this.isDestroyed = false;\n    this.isInitialized = false;\n    this._transitions = [];\n    this.isTransitioning = false;\n    this._queue = [];\n\n    const el = this._getElementOption(element);\n\n    if (!el) {\n      throw new TypeError('Shuffle needs to be initialized with an element.');\n    }\n\n    this.element = el;\n    this.id = `shuffle_${id}`;\n    id += 1;\n\n    this._init();\n    this.isInitialized = true;\n  }\n\n  _init() {\n    this.items = this._getItems();\n    this.sortedItems = this.items;\n\n    this.options.sizer = this._getElementOption(this.options.sizer);\n\n    // Add class and invalidate styles\n    this.element.classList.add(Shuffle.Classes.BASE);\n\n    // Set initial css for each item\n    this._initItems(this.items);\n\n    // If the page has not already emitted the `load` event, call layout on load.\n    // This avoids layout issues caused by images and fonts loading after the\n    // instance has been initialized.\n    if (document.readyState !== 'complete') {\n      const layout = this.layout.bind(this);\n      window.addEventListener('load', function onLoad() {\n        window.removeEventListener('load', onLoad);\n        layout();\n      });\n    }\n\n    // Get container css all in one request. Causes reflow\n    const containerCss = window.getComputedStyle(this.element, null);\n    const containerWidth = Shuffle.getSize(this.element).width;\n\n    // Add styles to the container if it doesn't have them.\n    this._validateStyles(containerCss);\n\n    // We already got the container's width above, no need to cause another\n    // reflow getting it again... Calculate the number of columns there will be\n    this._setColumns(containerWidth);\n\n    // Kick off!\n    this.filter(this.options.group, this.options.initialSort);\n\n    // Bind resize events\n    this._rafId = null;\n    // This is true for all supported browsers, but just to be safe, avoid throwing\n    // an error if ResizeObserver is not present. You can manually add a window resize\n    // event and call `update()` if ResizeObserver is missing, or use Shuffle v5.\n    if ('ResizeObserver' in window) {\n      this._resizeObserver = new ResizeObserver(this._handleResizeCallback.bind(this));\n      this._resizeObserver.observe(this.element);\n    }\n\n    // The shuffle items haven't had transitions set on them yet so the user\n    // doesn't see the first layout. Set them now that the first layout is done.\n    // First, however, a synchronous layout must be caused for the previous\n    // styles to be applied without transitions.\n    this.element.offsetWidth; // eslint-disable-line no-unused-expressions\n    this.setItemTransitions(this.items);\n    this.element.style.transition = `height ${this.options.speed}ms ${this.options.easing}`;\n  }\n\n  /**\n   * Retrieve an element from an option.\n   * @param {string|jQuery|Element} option The option to check.\n   * @return {?Element} The plain element or null.\n   * @private\n   */\n  _getElementOption(option) {\n    // If column width is a string, treat is as a selector and search for the\n    // sizer element within the outermost container\n    if (typeof option === 'string') {\n      return this.element.querySelector(option);\n    }\n\n    // Check for an element\n    if (option && option.nodeType && option.nodeType === 1) {\n      return option;\n    }\n\n    // Check for jQuery object\n    if (option && option.jquery) {\n      return option[0];\n    }\n\n    return null;\n  }\n\n  /**\n   * Ensures the shuffle container has the css styles it needs applied to it.\n   * @param {Object} styles Key value pairs for position and overflow.\n   * @private\n   */\n  _validateStyles(styles) {\n    // Position cannot be static.\n    if (styles.position === 'static') {\n      this.element.style.position = 'relative';\n    }\n\n    // Overflow has to be hidden.\n    if (styles.overflow !== 'hidden') {\n      this.element.style.overflow = 'hidden';\n    }\n  }\n\n  /**\n   * Filter the elements by a category.\n   * @param {string|string[]|function(Element):boolean} [category] Category to\n   *     filter by. If it's given, the last category will be used to filter the items.\n   * @param {Array} [collection] Optionally filter a collection. Defaults to\n   *     all the items.\n   * @return {{visible: ShuffleItem[], hidden: ShuffleItem[]}}\n   * @private\n   */\n  _filter(category = this.lastFilter, collection = this.items) {\n    const set = this._getFilteredSets(category, collection);\n\n    // Individually add/remove hidden/visible classes\n    this._toggleFilterClasses(set);\n\n    // Save the last filter in case elements are appended.\n    this.lastFilter = category;\n\n    // This is saved mainly because providing a filter function (like searching)\n    // will overwrite the `lastFilter` property every time its called.\n    if (typeof category === 'string') {\n      this.group = category;\n    }\n\n    return set;\n  }\n\n  /**\n   * Returns an object containing the visible and hidden elements.\n   * @param {string|string[]|function(Element):boolean} category Category or function to filter by.\n   * @param {ShuffleItem[]} items A collection of items to filter.\n   * @return {{visible: ShuffleItem[], hidden: ShuffleItem[]}}\n   * @private\n   */\n  _getFilteredSets(category, items) {\n    let visible = [];\n    const hidden = [];\n\n    // category === 'all', add visible class to everything\n    if (category === Shuffle.ALL_ITEMS) {\n      visible = items;\n\n      // Loop through each item and use provided function to determine\n      // whether to hide it or not.\n    } else {\n      items.forEach((item) => {\n        if (this._doesPassFilter(category, item.element)) {\n          visible.push(item);\n        } else {\n          hidden.push(item);\n        }\n      });\n    }\n\n    return {\n      visible,\n      hidden,\n    };\n  }\n\n  /**\n   * Test an item to see if it passes a category.\n   * @param {string|string[]|function():boolean} category Category or function to filter by.\n   * @param {Element} element An element to test.\n   * @return {boolean} Whether it passes the category/filter.\n   * @private\n   */\n  _doesPassFilter(category, element) {\n    if (typeof category === 'function') {\n      return category.call(element, element, this);\n    }\n\n    // Check each element's data-groups attribute against the given category.\n    const attr = element.dataset[Shuffle.FILTER_ATTRIBUTE_KEY];\n    const keys = this.options.delimiter ? attr.split(this.options.delimiter) : JSON.parse(attr);\n\n    function testCategory(category) {\n      return keys.includes(category);\n    }\n\n    if (Array.isArray(category)) {\n      if (this.options.filterMode === Shuffle.FilterMode.ANY) {\n        return category.some(testCategory);\n      }\n      return category.every(testCategory);\n    }\n\n    return keys.includes(category);\n  }\n\n  /**\n   * Toggles the visible and hidden class names.\n   * @param {{visible, hidden}} Object with visible and hidden arrays.\n   * @private\n   */\n  _toggleFilterClasses({ visible, hidden }) {\n    visible.forEach((item) => {\n      item.show();\n    });\n\n    hidden.forEach((item) => {\n      item.hide();\n    });\n  }\n\n  /**\n   * Set the initial css for each item\n   * @param {ShuffleItem[]} items Set to initialize.\n   * @private\n   */\n  _initItems(items) {\n    items.forEach((item) => {\n      item.init();\n    });\n  }\n\n  /**\n   * Remove element reference and styles.\n   * @param {ShuffleItem[]} items Set to dispose.\n   * @private\n   */\n  _disposeItems(items) {\n    items.forEach((item) => {\n      item.dispose();\n    });\n  }\n\n  /**\n   * Updates the visible item count.\n   * @private\n   */\n  _updateItemCount() {\n    this.visibleItems = this._getFilteredItems().length;\n  }\n\n  /**\n   * Sets css transform transition on a group of elements. This is not executed\n   * at the same time as `item.init` so that transitions don't occur upon\n   * initialization of a new Shuffle instance.\n   * @param {ShuffleItem[]} items Shuffle items to set transitions on.\n   * @protected\n   */\n  setItemTransitions(items) {\n    const { speed, easing } = this.options;\n    const positionProps = this.options.useTransforms ? ['transform'] : ['top', 'left'];\n\n    // Allow users to transition other properties if they exist in the `before`\n    // css mapping of the shuffle item.\n    const cssProps = Object.keys(ShuffleItem.Css.HIDDEN.before).map((k) => hyphenate(k));\n    const properties = positionProps.concat(cssProps).join();\n\n    items.forEach((item) => {\n      item.element.style.transitionDuration = `${speed}ms`;\n      item.element.style.transitionTimingFunction = easing;\n      item.element.style.transitionProperty = properties;\n    });\n  }\n\n  _getItems() {\n    return Array.from(this.element.children)\n      .filter((el) => el.matches(this.options.itemSelector))\n      .map((el) => new ShuffleItem(el, this.options.isRTL));\n  }\n\n  /**\n   * Combine the current items array with a new one and sort it by DOM order.\n   * @param {ShuffleItem[]} items Items to track.\n   * @return {ShuffleItem[]}\n   */\n  _mergeNewItems(items) {\n    const children = Array.from(this.element.children);\n    return sorter(this.items.concat(items), {\n      by(element) {\n        return children.indexOf(element);\n      },\n    });\n  }\n\n  _getFilteredItems() {\n    return this.items.filter((item) => item.isVisible);\n  }\n\n  _getConcealedItems() {\n    return this.items.filter((item) => !item.isVisible);\n  }\n\n  /**\n   * Returns the column size, based on column width and sizer options.\n   * @param {number} containerWidth Size of the parent container.\n   * @param {number} gutterSize Size of the gutters.\n   * @return {number}\n   * @private\n   */\n  _getColumnSize(containerWidth, gutterSize) {\n    let size;\n\n    // If the columnWidth property is a function, then the grid is fluid\n    if (typeof this.options.columnWidth === 'function') {\n      size = this.options.columnWidth(containerWidth);\n\n      // columnWidth option isn't a function, are they using a sizing element?\n    } else if (this.options.sizer) {\n      size = Shuffle.getSize(this.options.sizer).width;\n\n      // if not, how about the explicitly set option?\n    } else if (this.options.columnWidth) {\n      size = this.options.columnWidth;\n\n      // or use the size of the first item\n    } else if (this.items.length > 0) {\n      size = Shuffle.getSize(this.items[0].element, true).width;\n\n      // if there's no items, use size of container\n    } else {\n      size = containerWidth;\n    }\n\n    // Don't let them set a column width of zero.\n    if (size === 0) {\n      size = containerWidth;\n    }\n\n    return size + gutterSize;\n  }\n\n  /**\n   * Returns the gutter size, based on gutter width and sizer options.\n   * @param {number} containerWidth Size of the parent container.\n   * @return {number}\n   * @private\n   */\n  _getGutterSize(containerWidth) {\n    let size;\n    if (typeof this.options.gutterWidth === 'function') {\n      size = this.options.gutterWidth(containerWidth);\n    } else if (this.options.sizer) {\n      size = getNumberStyle(this.options.sizer, 'marginLeft');\n    } else {\n      size = this.options.gutterWidth;\n    }\n\n    return size;\n  }\n\n  /**\n   * Calculate the number of columns to be used. Gets css if using sizer element.\n   * @param {number} [containerWidth] Optionally specify a container width if\n   *    it's already available.\n   */\n  _setColumns(containerWidth = Shuffle.getSize(this.element).width) {\n    const gutter = this._getGutterSize(containerWidth);\n    const columnWidth = this._getColumnSize(containerWidth, gutter);\n    let calculatedColumns = (containerWidth + gutter) / columnWidth;\n\n    // Widths given from getStyles are not precise enough...\n    if (Math.abs(Math.round(calculatedColumns) - calculatedColumns) < this.options.columnThreshold) {\n      // e.g. calculatedColumns = 11.998876\n      calculatedColumns = Math.round(calculatedColumns);\n    }\n\n    this.cols = Math.max(Math.floor(calculatedColumns || 0), 1);\n    this.containerWidth = containerWidth;\n    this.colWidth = columnWidth;\n  }\n\n  /**\n   * Adjust the height of the grid\n   */\n  _setContainerSize() {\n    this.element.style.height = `${this._getContainerSize()}px`;\n  }\n\n  /**\n   * Based on the column heights, it returns the biggest one.\n   * @return {number}\n   * @private\n   */\n  _getContainerSize() {\n    return arrayMax(this.positions);\n  }\n\n  /**\n   * Get the clamped stagger amount.\n   * @param {number} index Index of the item to be staggered.\n   * @return {number}\n   */\n  _getStaggerAmount(index) {\n    return Math.min(index * this.options.staggerAmount, this.options.staggerAmountMax);\n  }\n\n  /**\n   * Emit an event from this instance.\n   * @param {string} name Event name.\n   * @param {Object} [data={}] Optional object data.\n   */\n  _dispatch(name, data = {}) {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    data.shuffle = this;\n    this.emit(name, data);\n  }\n\n  /**\n   * Zeros out the y columns array, which is used to determine item placement.\n   * @private\n   */\n  _resetCols() {\n    let i = this.cols;\n    this.positions = [];\n    while (i) {\n      i -= 1;\n      this.positions.push(0);\n    }\n  }\n\n  /**\n   * Loops through each item that should be shown and calculates the x, y position.\n   * @param {ShuffleItem[]} items Array of items that will be shown/layed\n   *     out in order in their array.\n   */\n  _layout(items) {\n    const itemPositions = this._getNextPositions(items);\n\n    let count = 0;\n    items.forEach((item, i) => {\n      function callback() {\n        item.applyCss(ShuffleItem.Css.VISIBLE.after);\n      }\n\n      // If the item will not change its position, do not add it to the render\n      // queue. Transitions don't fire when setting a property to the same value.\n      if (Point.equals(item.point, itemPositions[i]) && !item.isHidden) {\n        item.applyCss(ShuffleItem.Css.VISIBLE.before);\n        callback();\n        return;\n      }\n\n      item.point = itemPositions[i];\n      item.scale = ShuffleItem.Scale.VISIBLE;\n      item.isHidden = false;\n\n      // Clone the object so that the `before` object isn't modified when the\n      // transition delay is added.\n      const styles = this.getStylesForTransition(item, ShuffleItem.Css.VISIBLE.before);\n      styles.transitionDelay = `${this._getStaggerAmount(count)}ms`;\n\n      this._queue.push({\n        item,\n        styles,\n        callback,\n      });\n\n      count += 1;\n    });\n  }\n\n  /**\n   * Return an array of Point instances representing the future positions of\n   * each item.\n   * @param {ShuffleItem[]} items Array of sorted shuffle items.\n   * @return {Point[]}\n   * @private\n   */\n  _getNextPositions(items) {\n    // If position data is going to be changed, add the item's size to the\n    // transformer to allow for calculations.\n    if (this.options.isCentered) {\n      const itemsData = items.map((item, i) => {\n        const itemSize = Shuffle.getSize(item.element, true);\n        const point = this._getItemPosition(itemSize);\n        return new Rect(point.x, point.y, itemSize.width, itemSize.height, i);\n      });\n\n      return this.getTransformedPositions(itemsData, this.containerWidth);\n    }\n\n    // If no transforms are going to happen, simply return an array of the\n    // future points of each item.\n    return items.map((item) => this._getItemPosition(Shuffle.getSize(item.element, true)));\n  }\n\n  /**\n   * Determine the location of the next item, based on its size.\n   * @param {{width: number, height: number}} itemSize Object with width and height.\n   * @return {Point}\n   * @private\n   */\n  _getItemPosition(itemSize) {\n    return getItemPosition({\n      itemSize,\n      positions: this.positions,\n      gridSize: this.colWidth,\n      total: this.cols,\n      threshold: this.options.columnThreshold,\n      buffer: this.options.buffer,\n    });\n  }\n\n  /**\n   * Mutate positions before they're applied.\n   * @param {Rect[]} itemRects Item data objects.\n   * @param {number} containerWidth Width of the containing element.\n   * @return {Point[]}\n   * @protected\n   */\n  getTransformedPositions(itemRects, containerWidth) {\n    return getCenteredPositions(itemRects, containerWidth);\n  }\n\n  /**\n   * Hides the elements that don't match our filter.\n   * @param {ShuffleItem[]} collection Collection to shrink.\n   * @private\n   */\n  _shrink(collection = this._getConcealedItems()) {\n    let count = 0;\n    collection.forEach((item) => {\n      function callback() {\n        item.applyCss(ShuffleItem.Css.HIDDEN.after);\n      }\n\n      // Continuing would add a transitionend event listener to the element, but\n      // that listener would not execute because the transform and opacity would\n      // stay the same.\n      // The callback is executed here because it is not guaranteed to be called\n      // after the transitionend event because the transitionend could be\n      // canceled if another animation starts.\n      if (item.isHidden) {\n        item.applyCss(ShuffleItem.Css.HIDDEN.before);\n        callback();\n        return;\n      }\n\n      item.scale = ShuffleItem.Scale.HIDDEN;\n      item.isHidden = true;\n\n      const styles = this.getStylesForTransition(item, ShuffleItem.Css.HIDDEN.before);\n      styles.transitionDelay = `${this._getStaggerAmount(count)}ms`;\n\n      this._queue.push({\n        item,\n        styles,\n        callback,\n      });\n\n      count += 1;\n    });\n  }\n\n  /**\n   * Resize handler.\n   * @param {ResizeObserverEntry[]} entries\n   */\n  _handleResizeCallback(entries) {\n    // If shuffle is disabled, destroyed, don't do anything.\n    // You can still manually force a shuffle update with shuffle.update({ force: true }).\n    if (!this.isEnabled || this.isDestroyed) {\n      return;\n    }\n\n    // The reason ESLint disables this is because for..of generates a lot of extra\n    // code using Babel, but Shuffle no longer supports browsers that old, so\n    // nothing to worry about.\n    // eslint-disable-next-line no-restricted-syntax\n    for (const entry of entries) {\n      if (Math.round(entry.contentRect.width) !== Math.round(this.containerWidth)) {\n        // If there was already an animation waiting, cancel it.\n        cancelAnimationFrame(this._rafId);\n        // Offload updating the DOM until the browser is ready.\n        this._rafId = requestAnimationFrame(this.update.bind(this));\n      }\n    }\n  }\n\n  /**\n   * Returns styles which will be applied to the an item for a transition.\n   * @param {ShuffleItem} item Item to get styles for. Should have updated\n   *   scale and point properties.\n   * @param {Object} styleObject Extra styles that will be used in the transition.\n   * @return {!Object} Transforms for transitions, left/top for animate.\n   * @protected\n   */\n  getStylesForTransition(item, styleObject) {\n    // Clone the object to avoid mutating the original.\n    const styles = { ...styleObject };\n\n    if (this.options.useTransforms) {\n      const sign = this.options.isRTL ? '-' : '';\n      const x = this.options.roundTransforms ? Math.round(item.point.x) : item.point.x;\n      const y = this.options.roundTransforms ? Math.round(item.point.y) : item.point.y;\n      styles.transform = `translate(${sign}${x}px, ${y}px) scale(${item.scale})`;\n    } else {\n      if (this.options.isRTL) {\n        styles.right = `${item.point.x}px`;\n      } else {\n        styles.left = `${item.point.x}px`;\n      }\n      styles.top = `${item.point.y}px`;\n    }\n\n    return styles;\n  }\n\n  /**\n   * Listen for the transition end on an element and execute the itemCallback\n   * when it finishes.\n   * @param {Element} element Element to listen on.\n   * @param {function} itemCallback Callback for the item.\n   * @param {function} done Callback to notify `parallel` that this one is done.\n   */\n  _whenTransitionDone(element, itemCallback, done) {\n    const id = onTransitionEnd(element, (evt) => {\n      itemCallback();\n      done(null, evt);\n    });\n\n    this._transitions.push(id);\n  }\n\n  /**\n   * Return a function which will set CSS styles and call the `done` function\n   * when (if) the transition finishes.\n   * @param {Object} opts Transition object.\n   * @return {function} A function to be called with a `done` function.\n   */\n  _getTransitionFunction(opts) {\n    return (done) => {\n      opts.item.applyCss(opts.styles);\n      this._whenTransitionDone(opts.item.element, opts.callback, done);\n    };\n  }\n\n  /**\n   * Execute the styles gathered in the style queue. This applies styles to elements,\n   * triggering transitions.\n   * @private\n   */\n  _processQueue() {\n    if (this.isTransitioning) {\n      this._cancelMovement();\n    }\n\n    const hasSpeed = this.options.speed > 0;\n    const hasQueue = this._queue.length > 0;\n\n    if (hasQueue && hasSpeed && this.isInitialized) {\n      this._startTransitions(this._queue);\n    } else if (hasQueue) {\n      this._styleImmediately(this._queue);\n      this._dispatch(Shuffle.EventType.LAYOUT);\n\n      // A call to layout happened, but none of the newly visible items will\n      // change position or the transition duration is zero, which will not trigger\n      // the transitionend event.\n    } else {\n      this._dispatch(Shuffle.EventType.LAYOUT);\n    }\n\n    // Remove everything in the style queue\n    this._queue.length = 0;\n  }\n\n  /**\n   * Wait for each transition to finish, the emit the layout event.\n   * @param {Object[]} transitions Array of transition objects.\n   */\n  _startTransitions(transitions) {\n    // Set flag that shuffle is currently in motion.\n    this.isTransitioning = true;\n\n    // Create an array of functions to be called.\n    const callbacks = transitions.map((obj) => this._getTransitionFunction(obj));\n\n    parallel(callbacks, this._movementFinished.bind(this));\n  }\n\n  _cancelMovement() {\n    // Remove the transition end event for each listener.\n    this._transitions.forEach(cancelTransitionEnd);\n\n    // Reset the array.\n    this._transitions.length = 0;\n\n    // Show it's no longer active.\n    this.isTransitioning = false;\n  }\n\n  /**\n   * Apply styles without a transition.\n   * @param {Object[]} objects Array of transition objects.\n   * @private\n   */\n  _styleImmediately(objects) {\n    if (objects.length) {\n      const elements = objects.map((obj) => obj.item.element);\n\n      Shuffle._skipTransitions(elements, () => {\n        objects.forEach((obj) => {\n          obj.item.applyCss(obj.styles);\n          obj.callback();\n        });\n      });\n    }\n  }\n\n  _movementFinished() {\n    this._transitions.length = 0;\n    this.isTransitioning = false;\n    this._dispatch(Shuffle.EventType.LAYOUT);\n  }\n\n  /**\n   * The magic. This is what makes the plugin 'shuffle'\n   * @param {string|string[]|function(Element):boolean} [category] Category to filter by.\n   *     Can be a function, string, or array of strings.\n   * @param {SortOptions} [sortOptions] A sort object which can sort the visible set\n   */\n  filter(category, sortOptions) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    if (!category || (category && category.length === 0)) {\n      category = Shuffle.ALL_ITEMS; // eslint-disable-line no-param-reassign\n    }\n\n    this._filter(category);\n\n    // Shrink each hidden item\n    this._shrink();\n\n    // How many visible elements?\n    this._updateItemCount();\n\n    // Update transforms on visible elements so they will animate to their new positions.\n    this.sort(sortOptions);\n  }\n\n  /**\n   * Gets the visible elements, sorts them, and passes them to layout.\n   * @param {SortOptions} [sortOptions] The options object to pass to `sorter`.\n   */\n  sort(sortOptions = this.lastSort) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    this._resetCols();\n\n    const items = sorter(this._getFilteredItems(), sortOptions);\n    this.sortedItems = items;\n\n    this._layout(items);\n\n    // `_layout` always happens after `_shrink`, so it's safe to process the style\n    // queue here with styles from the shrink method.\n    this._processQueue();\n\n    // Adjust the height of the container.\n    this._setContainerSize();\n\n    this.lastSort = sortOptions;\n  }\n\n  /**\n   * Reposition everything.\n   * @param {object} options options object\n   * @param {boolean} [options.recalculateSizes=true] Whether to calculate column, gutter, and container widths again.\n   * @param {boolean} [options.force=false] By default, `update` does nothing if the instance is disabled. Setting this\n   *    to true forces the update to happen regardless.\n   */\n  update({ recalculateSizes = true, force = false } = {}) {\n    if (this.isEnabled || force) {\n      if (recalculateSizes) {\n        this._setColumns();\n      }\n\n      // Layout items\n      this.sort();\n    }\n  }\n\n  /**\n   * Use this instead of `update()` if you don't need the columns and gutters updated\n   * Maybe an image inside `shuffle` loaded (and now has a height), which means calculations\n   * could be off.\n   */\n  layout() {\n    this.update({\n      recalculateSizes: true,\n    });\n  }\n\n  /**\n   * New items have been appended to shuffle. Mix them in with the current\n   * filter or sort status.\n   * @param {Element[]} newItems Collection of new items.\n   */\n  add(newItems) {\n    const items = arrayUnique(newItems).map((el) => new ShuffleItem(el, this.options.isRTL));\n\n    // Add classes and set initial positions.\n    this._initItems(items);\n\n    // Determine which items will go with the current filter.\n    this._resetCols();\n\n    const allItems = this._mergeNewItems(items);\n    const sortedItems = sorter(allItems, this.lastSort);\n    const allSortedItemsSet = this._filter(this.lastFilter, sortedItems);\n\n    const isNewItem = (item) => items.includes(item);\n    const applyHiddenState = (item) => {\n      item.scale = ShuffleItem.Scale.HIDDEN;\n      item.isHidden = true;\n      item.applyCss(ShuffleItem.Css.HIDDEN.before);\n      item.applyCss(ShuffleItem.Css.HIDDEN.after);\n    };\n\n    // Layout all items again so that new items get positions.\n    // Synchronously apply positions.\n    const itemPositions = this._getNextPositions(allSortedItemsSet.visible);\n    allSortedItemsSet.visible.forEach((item, i) => {\n      if (isNewItem(item)) {\n        item.point = itemPositions[i];\n        applyHiddenState(item);\n        item.applyCss(this.getStylesForTransition(item, {}));\n      }\n    });\n\n    allSortedItemsSet.hidden.forEach((item) => {\n      if (isNewItem(item)) {\n        applyHiddenState(item);\n      }\n    });\n\n    // Cause layout so that the styles above are applied.\n    this.element.offsetWidth; // eslint-disable-line no-unused-expressions\n\n    // Add transition to each item.\n    this.setItemTransitions(items);\n\n    // Update the list of items.\n    this.items = this._mergeNewItems(items);\n\n    // Update layout/visibility of new and old items.\n    this.filter(this.lastFilter);\n  }\n\n  /**\n   * Disables shuffle from updating dimensions and layout on resize\n   */\n  disable() {\n    this.isEnabled = false;\n  }\n\n  /**\n   * Enables shuffle again\n   * @param {boolean} [isUpdateLayout=true] if undefined, shuffle will update columns and gutters\n   */\n  enable(isUpdateLayout = true) {\n    this.isEnabled = true;\n    if (isUpdateLayout) {\n      this.update();\n    }\n  }\n\n  /**\n   * Remove 1 or more shuffle items.\n   * @param {Element[]} elements An array containing one or more\n   *     elements in shuffle\n   * @return {Shuffle} The shuffle instance.\n   */\n  remove(elements) {\n    if (!elements.length) {\n      return;\n    }\n\n    const collection = arrayUnique(elements);\n\n    const oldItems = collection.map((element) => this.getItemByElement(element)).filter((item) => !!item);\n\n    const handleLayout = () => {\n      this._disposeItems(oldItems);\n\n      // Remove the collection in the callback\n      collection.forEach((element) => {\n        element.parentNode.removeChild(element);\n      });\n\n      this._dispatch(Shuffle.EventType.REMOVED, { collection });\n    };\n\n    // Hide collection first.\n    this._toggleFilterClasses({\n      visible: [],\n      hidden: oldItems,\n    });\n\n    this._shrink(oldItems);\n\n    this.sort();\n\n    // Update the list of items here because `remove` could be called again\n    // with an item that is in the process of being removed.\n    this.items = this.items.filter((item) => !oldItems.includes(item));\n    this._updateItemCount();\n\n    this.once(Shuffle.EventType.LAYOUT, handleLayout);\n  }\n\n  /**\n   * Retrieve a shuffle item by its element.\n   * @param {Element} element Element to look for.\n   * @return {?ShuffleItem} A shuffle item or undefined if it's not found.\n   */\n  getItemByElement(element) {\n    return this.items.find((item) => item.element === element);\n  }\n\n  /**\n   * Dump the elements currently stored and reinitialize all child elements which\n   * match the `itemSelector`.\n   */\n  resetItems() {\n    // Remove refs to current items.\n    this._disposeItems(this.items);\n    this.isInitialized = false;\n\n    // Find new items in the DOM.\n    this.items = this._getItems();\n\n    // Set initial styles on the new items.\n    this._initItems(this.items);\n\n    this.once(Shuffle.EventType.LAYOUT, () => {\n      // Add transition to each item.\n      this.setItemTransitions(this.items);\n      this.isInitialized = true;\n    });\n\n    // Lay out all items.\n    this.filter(this.lastFilter);\n  }\n\n  /**\n   * Destroys shuffle, removes events, styles, and classes\n   */\n  destroy() {\n    this._cancelMovement();\n    if (this._resizeObserver) {\n      this._resizeObserver.unobserve(this.element);\n      this._resizeObserver = null;\n    }\n\n    // Reset container styles\n    this.element.classList.remove('shuffle');\n    this.element.removeAttribute('style');\n\n    // Reset individual item styles\n    this._disposeItems(this.items);\n\n    this.items.length = 0;\n    this.sortedItems.length = 0;\n    this._transitions.length = 0;\n\n    // Null DOM references\n    this.options.sizer = null;\n    this.element = null;\n\n    // Set a flag so if a debounced resize has been triggered,\n    // it can first check if it is actually isDestroyed and not doing anything\n    this.isDestroyed = true;\n    this.isEnabled = false;\n  }\n\n  /**\n   * Returns the outer width of an element, optionally including its margins.\n   *\n   * There are a few different methods for getting the width of an element, none of\n   * which work perfectly for all Shuffle's use cases.\n   *\n   * 1. getBoundingClientRect() `left` and `right` properties.\n   *   - Accounts for transform scaled elements, making it useless for Shuffle\n   *   elements which have shrunk.\n   * 2. The `offsetWidth` property.\n   *   - This value stays the same regardless of the elements transform property,\n   *   however, it does not return subpixel values.\n   * 3. getComputedStyle()\n   *   - This works great Chrome, Firefox, Safari, but IE<=11 does not include\n   *   padding and border when box-sizing: border-box is set, requiring a feature\n   *   test and extra work to add the padding back for IE and other browsers which\n   *   follow the W3C spec here.\n   *\n   * @param {Element} element The element.\n   * @param {boolean} [includeMargins=false] Whether to include margins.\n   * @return {{width: number, height: number}} The width and height.\n   */\n  static getSize(element, includeMargins = false) {\n    // Store the styles so that they can be used by others without asking for it again.\n    const styles = window.getComputedStyle(element, null);\n    let width = getNumberStyle(element, 'width', styles);\n    let height = getNumberStyle(element, 'height', styles);\n\n    if (includeMargins) {\n      const marginLeft = getNumberStyle(element, 'marginLeft', styles);\n      const marginRight = getNumberStyle(element, 'marginRight', styles);\n      const marginTop = getNumberStyle(element, 'marginTop', styles);\n      const marginBottom = getNumberStyle(element, 'marginBottom', styles);\n      width += marginLeft + marginRight;\n      height += marginTop + marginBottom;\n    }\n\n    return {\n      width,\n      height,\n    };\n  }\n\n  /**\n   * Change a property or execute a function which will not have a transition\n   * @param {Element[]} elements DOM elements that won't be transitioned.\n   * @param {function} callback A function which will be called while transition\n   *     is set to 0ms.\n   * @private\n   */\n  static _skipTransitions(elements, callback) {\n    const zero = '0ms';\n\n    // Save current duration and delay.\n    const data = elements.map((element) => {\n      const { style } = element;\n      const duration = style.transitionDuration;\n      const delay = style.transitionDelay;\n\n      // Set the duration to zero so it happens immediately\n      style.transitionDuration = zero;\n      style.transitionDelay = zero;\n\n      return {\n        duration,\n        delay,\n      };\n    });\n\n    callback();\n\n    // Cause forced synchronous layout.\n    elements[0].offsetWidth; // eslint-disable-line no-unused-expressions\n\n    // Put the duration back\n    elements.forEach((element, i) => {\n      element.style.transitionDuration = data[i].duration;\n      element.style.transitionDelay = data[i].delay;\n    });\n  }\n}\n\nShuffle.ShuffleItem = ShuffleItem;\n\nShuffle.ALL_ITEMS = 'all';\nShuffle.FILTER_ATTRIBUTE_KEY = 'groups';\n\n/** @enum {string} */\nShuffle.EventType = {\n  LAYOUT: 'shuffle:layout',\n  REMOVED: 'shuffle:removed',\n};\n\n/** @enum {string} */\nShuffle.Classes = Classes;\n\n/** @enum {string} */\nShuffle.FilterMode = {\n  ANY: 'any',\n  ALL: 'all',\n};\n\n// Overridable options\nShuffle.options = {\n  // Initial filter group.\n  group: Shuffle.ALL_ITEMS,\n\n  // Transition/animation speed (milliseconds).\n  speed: 250,\n\n  // CSS easing function to use.\n  easing: 'cubic-bezier(0.4, 0.0, 0.2, 1)',\n\n  // e.g. '.picture-item'.\n  itemSelector: '*',\n\n  // Element or selector string. Use an element to determine the size of columns\n  // and gutters.\n  sizer: null,\n\n  // A static number or function that tells the plugin how wide the gutters\n  // between columns are (in pixels).\n  gutterWidth: 0,\n\n  // A static number or function that returns a number which tells the plugin\n  // how wide the columns are (in pixels).\n  columnWidth: 0,\n\n  // If your group is not json, and is comma delimited, you could set delimiter\n  // to ','.\n  delimiter: null,\n\n  // Useful for percentage based heights when they might not always be exactly\n  // the same (in pixels).\n  buffer: 0,\n\n  // Reading the width of elements isn't precise enough and can cause columns to\n  // jump between values.\n  columnThreshold: 0.01,\n\n  // Shuffle can be initialized with a sort object. It is the same object\n  // given to the sort method.\n  initialSort: null,\n\n  // Transition delay offset for each item in milliseconds.\n  staggerAmount: 15,\n\n  // Maximum stagger delay in milliseconds.\n  staggerAmountMax: 150,\n\n  // Whether to use transforms or absolute positioning.\n  useTransforms: true,\n\n  // Affects using an array with filter. e.g. `filter(['one', 'two'])`. With \"any\",\n  // the element passes the test if any of its groups are in the array. With \"all\",\n  // the element only passes if all groups are in the array.\n  // Note, this has no effect if you supply a custom filter function.\n  filterMode: Shuffle.FilterMode.ANY,\n\n  // Attempt to center grid items in each row.\n  isCentered: false,\n\n  // Attempt to align grid items to right.\n  isRTL: false,\n\n  // Whether to round pixel values used in translate(x, y). This usually avoids\n  // blurriness.\n  roundTransforms: true,\n};\n\nShuffle.Point = Point;\nShuffle.Rect = Rect;\n\n// Expose for testing. Hack at your own risk.\nShuffle.__sorter = sorter;\nShuffle.__getColumnSpan = getColumnSpan;\nShuffle.__getAvailablePositions = getAvailablePositions;\nShuffle.__getShortColumn = getShortColumn;\nShuffle.__getCenteredPositions = getCenteredPositions;\n\nexport default Shuffle;\n"],"names":["tinyEmitterModule","tinyEmitter","getNumber","value","parseFloat","Point","constructor","x","y","equals","a","b","Rect","w","h","id","left","top","width","height","intersects","BASE","SHUFFLE_ITEM","VISIBLE","HIDDEN","ShuffleItem","element","isRTL","isVisible","isHidden","show","classList","remove","Classes","add","removeAttribute","hide","setAttribute","init","addClasses","applyCss","Css","INITIAL","DIRECTION","rtl","ltr","scale","Scale","point","classes","forEach","className","removeClasses","obj","Object","keys","key","style","dispose","position","visibility","willChange","right","before","opacity","after","transitionDelay","document","body","documentElement","e","createElement","cssText","appendChild","window","getComputedStyle","Math","round","removeChild","getNumberStyle","styles","arguments","length","undefined","testComputedSize","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","randomize","array","n","i","floor","random","temp","defaults","reverse","by","compare","sorter","arr","options","opts","original","Array","from","revert","sort","valA","valB","transitions","eventName","count","uniqueId","cancelTransitionEnd","removeEventListener","listener","onTransitionEnd","callback","evt","currentTarget","target","addEventListener","arrayMax","max","arrayMin","min","getColumnSpan","itemWidth","columnWidth","columns","threshold","columnSpan","abs","ceil","getAvailablePositions","positions","available","push","slice","getShortColumn","buffer","minPosition","len","getItemPosition","_ref","itemSize","gridSize","total","span","setY","shortColumnIndex","setHeight","getCenteredPositions","itemRects","containerWidth","rowMap","itemRect","rects","rows","centeredRows","lastItem","end","offset","finalRects","canMove","newRects","every","r","newRect","noOverlap","some","intersectingRect","hasOverlap","rowIndex","findIndex","items","includes","splice","concat","flat","map","hyphenate","str","replace","m1","toLowerCase","arrayUnique","Set","Shuffle","TinyEmitter","lastSort","group","ALL_ITEMS","lastFilter","isEnabled","isDestroyed","isInitialized","_transitions","isTransitioning","_queue","el","_getElementOption","TypeError","_init","_getItems","sortedItems","sizer","_initItems","readyState","layout","bind","onLoad","containerCss","getSize","_validateStyles","_setColumns","filter","initialSort","_rafId","_resizeObserver","ResizeObserver","_handleResizeCallback","observe","offsetWidth","setItemTransitions","transition","speed","easing","option","querySelector","nodeType","jquery","overflow","_filter","category","collection","set","_getFilteredSets","_toggleFilterClasses","visible","hidden","item","_doesPassFilter","call","attr","dataset","FILTER_ATTRIBUTE_KEY","delimiter","split","JSON","parse","testCategory","isArray","filterMode","FilterMode","ANY","_disposeItems","_updateItemCount","visibleItems","_getFilteredItems","positionProps","useTransforms","cssProps","k","properties","join","transitionDuration","transitionTimingFunction","transitionProperty","children","matches","itemSelector","_mergeNewItems","indexOf","_getConcealedItems","_getColumnSize","gutterSize","size","_getGutterSize","gutterWidth","gutter","calculatedColumns","columnThreshold","cols","colWidth","_setContainerSize","_getContainerSize","_getStaggerAmount","index","staggerAmount","staggerAmountMax","_dispatch","name","data","shuffle","emit","_resetCols","_layout","itemPositions","_getNextPositions","getStylesForTransition","isCentered","itemsData","_getItemPosition","getTransformedPositions","_shrink","entries","entry","contentRect","cancelAnimationFrame","requestAnimationFrame","update","styleObject","sign","roundTransforms","transform","_whenTransitionDone","itemCallback","done","_getTransitionFunction","_processQueue","_cancelMovement","hasSpeed","hasQueue","_startTransitions","_styleImmediately","EventType","LAYOUT","callbacks","parallel","_movementFinished","objects","elements","_skipTransitions","sortOptions","recalculateSizes","force","newItems","allItems","allSortedItemsSet","isNewItem","applyHiddenState","disable","enable","isUpdateLayout","oldItems","getItemByElement","handleLayout","parentNode","REMOVED","once","find","resetItems","destroy","unobserve","includeMargins","marginLeft","marginRight","marginTop","marginBottom","zero","duration","delay","ALL","__sorter","__getColumnSpan","__getAvailablePositions","__getShortColumn","__getCenteredPositions"],"mappings":"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"}